name: Dashboard CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - "src/dashboard/**"
      - "scripts/run_dashboard.py"
      - "requirements.txt"
      - ".github/workflows/dashboard.yml"
  pull_request:
    branches: [main]
    paths:
      - "src/dashboard/**"
      - "scripts/run_dashboard.py"
      - "requirements.txt"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8 black

      - name: Lint dashboard code
        run: |
          flake8 src/dashboard/ --max-line-length=100 --ignore=E203,W503
          black --check src/dashboard/

      - name: Run dashboard tests
        run: |
          python scripts/run_dashboard.py --check-deps
          pytest tests/unit/test_dashboard.py -v --cov=src/dashboard --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: dashboard
          name: dashboard-coverage

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build dashboard
        run: |
          make dashboard-build

      - name: Create deployment package
        run: |
          tar -czf dashboard-deploy.tar.gz \
            src/dashboard/ \
            scripts/run_dashboard.py \
            config/dashboard_config.yaml \
            requirements.txt

      - name: Upload deployment package
        uses: actions/upload-artifact@v3
        with:
          name: dashboard-package
          path: dashboard-deploy.tar.gz

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: staging

    steps:
      - uses: actions/checkout@v3

      - name: Download deployment package
        uses: actions/download-artifact@v3
        with:
          name: dashboard-package

      - name: Deploy to staging
        run: |
          tar -xzf dashboard-deploy.tar.gz
          # Add your staging deployment commands here
          echo "Deploying to staging environment..."

      - name: Health check
        run: |
          # Add health check commands here
          echo "Running health checks..."

  deploy-production:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
      - uses: actions/checkout@v3

      - name: Download deployment package
        uses: actions/download-artifact@v3
        with:
          name: dashboard-package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to production
        run: |
          tar -xzf dashboard-deploy.tar.gz
          # Add your production deployment commands here
          echo "Deploying to production environment..."

      - name: Production health check
        run: |
          # Add production health check commands here
          echo "Running production health checks..."


